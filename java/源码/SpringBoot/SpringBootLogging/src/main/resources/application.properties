spring.application.name=SpringBootLogging


# 指定全局的日志级别是DEBUG
#logging.level.root=DEBUG

# SpringBoot支持我们制定对应类的日志级别
# 但是需要使用全类名的方式来进行配置，如果配置多了就会变得非常麻烦
#logging.level.com.springboot.example.springbootlogging.controller.HelloController=TRACE


# 使用SpringBoot提供的分组机制可以将不同的类进行分组，然后进行统一的配置日志级别
logging.group.test=com.springboot.example.springbootlogging.controller.HelloController,\
                   com.springboot.example.springbootlogging.controller.GoodbyeController
logging.level.test=DEBUG


# 指定日志信息的输出文件名，也可以指定路径
# 如果只指定名称，那么该文件默认会与项目同级
# 如果写的是相对路径，那么相对的是项目所在的目录
logging.file.name=SpringBootLogging\\src\\main\\resources\\mylog.log
# 指定每次项目启动时不删除日志文件（默认是false）
logging.logback.rollingpolicy.clean-history-on-start=false
# 指定归档时文件的名称（这是默认值）
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
# 指定当文件超过多大时，开始进行滚动切割
logging.logback.rollingpolicy.max-file-size=1MB
# 指定文件最多能保存一天
logging.logback.rollingpolicy.max-history=1
# 指定日志文件总大小超过1MB时，自动删除旧的日志文件
logging.logback.rollingpolicy.total-size-cap=1GB
