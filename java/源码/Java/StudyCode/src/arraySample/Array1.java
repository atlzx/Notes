package arraySample;

public class Array1 {
    public static void main(String[] args) {

        // 数组属于引用数据类型

        // 数组的静态声明方式，在变量的赋值语句和声明语句在一起时，可以省略new语句。
        int[] arr1 = new int[]{1, 2, 3, 4};
        // 省略new语句后的数组静态声明方式，由于此时赋值语句和声明语句是写在一起的，编译器能够知道被赋值的是一个什么类型的变量，该情况被称为类型推断
        int[] arr2 = {1, 2, 3, 4};

        /*下面的情况，编译器会编译错误，因为变量的赋值语句和声明语句未写在一起，导致编译器无法识别被赋值的变量是什么类型的
           int[] arr3;
           arr3={1,2,3,4};
        */

        int[] arr4 = new int[4];
        arr4[0] = 2;  // 直接给数组的对应下标元素赋值，由于数组对象最开始指向的是该数组的第一个元素，因此下标表示数组指向元素的偏移量
        System.out.println("arr4的长度是" + arr4.length + "，其第一个元素的值为" + arr4[0]);  // 调用arr4.length得到数组的长度，该长度表示数组的元素数量

        // int[] arr5=new byte[5];  该段代码会报错，因为数组不属于基本数据类型，引用数据类型这样做无法进行自动类型提升
    }
}
